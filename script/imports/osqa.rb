require "pg"
require_relative "base"

class Imports::OSQA < Imports::Base

  DB_NAME = ENV["OSQA_DB"] || "osqa"

  HAM_USER_IDS = [
    100014484, 100046663, 100005396, 100001071, 100005361,
    100008283, 100027540, 100012003, 169623515, 133601645,
    100011294, 100000461, 100008230, 100007518, 100051027,
    100017178, 100050132, 100012219, 113259599, 100008306,
    100005156, 151471006, 100008240, 114429018, 100008272,
    100026277, 100005415, 100051572, 100002780, 115118682,
    100001094, 100006134, 100008221, 100006690, 100004161,
    100003947, 100001072, 100009942, 100008318, 100001468,
    100025879, 111211819, 100008548, 196608579, 100006204,
    100067778, 100007828, 100026104, 358828091, 100020080,
    100028529, 100005110, 100000979, 100018453, 100002126,
    100008281, 100009575, 100011585, 100044437, 111160103,
    100042340, 100010351, 100112559, 100044536, 100032279,
    100032463, 100012879, 100025468, 100010791, 143948638,
    100019875, 100008254, 100002517, 100006979, 100026097,
    100001295, 100010343, 100010329, 100054681, 100004081,
    100033775, 100008270, 100003289, 100014031, 100004871,
    100008268, 100007303, 100004586, 100017674, 100088782,
    236312992, 247178916, 100012252, 100022094, 100027859,
    100002315, 100001252, 100005632, 100018920, 100043415,
    100008647, 100001264, 100004100, 100007459, 100031119,
    100010797, 100011127, 100008227, 100001280, 100000485,
    100006853, 100007850, 100004147, 100103101, 100023661,
    100020845, 100010183, 126992899, 111842072, 100008243,
    100004903, 100003721, 100027013, 111265130, 100061433,
    100006552, 100000452, 100019878, 100033350, 117698782,
    100073491, 100002202, 100008094, 100007147, 113201647,
    116278350, 100003569,
  ]

  SPAM_USER_IDS = [
    360942868, 361792518, 361712896, 360943400, 361708753,
    100302610, 360943052, 361768428, 361925759, 361763838,
    361698654, 361822045, 361694430, 360983374, 361363267,
    361322876, 361797385, 306176783, 361256829, 360932606,
    361192429, 361827117, 361763675, 360952454, 361852548,
    360962860, 361383930, 361729872, 361579359, 361894226,
    361328294, 361700941, 361317763, 306382089, 361345651,
    361849504, 361100297, 208670237, 360990646, 361343326,
    361529833, 361343422, 360942802, 361637913,
  ]

  UD201 = /1234788951|1219178878|4619508814|117943390|117708717|117640066|117640065|117640067|117708718|117640069|117640068|117640070|117708719|117640072|117640071|117640073|117708720|117640075|117640074|117640076|117943391|117708721|117640078|117640077|117640079|117708722|117640081|117640080|117640082|117708723|117640084|117640083|117640085|117708724|117640087|117640086|117640088|117708725|117640090|117640089|117640091|117708726|117640093|117640092|117640094|117708727|117640096|117640095|117640097|1234238735|126004777|126131694|127131534|126004778|126004780|126131695|126004782|126004781|126004783|126131696|126004785|126004784|126004786|126004787|126004788|126131697|126004790|126004789|126004791|126131698|126004793|126004792|126004794|126004795|126131699|126004797|126004796|126004798|126131700|126004800|126004799|126004801|126131701|126004803|126004802|126004804|126131702|126004806|126004805|126004807|126131703|126004809|126004808|126004810|126004811|126131704|127131535|126004813|126004814|126131705|126004816|126004815|126004817|126004818|126131706|126004820|126004819|126004821|126004822|126131707|126004824|126004823|126004825|126131708|126004827|126004826|126004828|126131709|126004830|126004829|126004831|126131710|126004833|126004832|126004834|130235795|126131711|126004836|126004835|147801425|126004838|126131712|126004840|126004839|126004841|126131713|126004843|126004842|126004844|126131714|126004846|126004845|126004847|126131715|126004849|126004848|126004850|126131716|126004852|126004851|126004853|126004854|1926308665|1382618557|1626478576|1595258618|252152719|127181460|252152720|127181461|252152721|127181462|252152722|127181463|252152723|127181464|252152724|127181465|252152725|127181474|252152726|127181466|252152727|127181467|252152728|127181468|252152729|127181469|252152730|127181470|252152731|127181475|252152732|127181471|252152733|127181472|252152734|127181473|1335148547|136488372|135919217|135919216|135919218|136488373|135919220|135919219|135919221|136488374|135919223|135919222|135919224|136488375|135919227|135919225|135919230|136488376|135919228|135919226|135919229|135919232|136488377|135919234|135919233|135919235|135919213|136488378|135919237|135919236|135919238|136488379|135919240|135919239|135919241|136488380|135919243|135919242|135919244|136488381|135919246|135919245|135919247|136488382|135919249|135919248|135919250|136488383|135919252|135919251|135919253|135919254|136488384|135919256|135919255|135919257|136488385|135919259|135919258|135919260|136488386|135919262|135919261|135919263|136488387|135919265|135919264|135919266|136488388|135919268|135919267|135919269|135919270|136488389|135919272|135919271|135919273|136488390|135919275|135919274|135919276|136488391|135919278|135919277|135919279|136488392|135919281|135919280|135919282|136488393|135919284|135919283|135919285|136488394|135919287|135919286|135919288|136488395|135919290|135919289|135919291|136488396|135919293|135919292|135919294|136488397|135919296|135919295|135919297|136488398|135919299|135919298|135919300|136488399|139154301|135919301|139154302|136488400|135919305|135919304|135919306|135919307|140416373|140416375|140567113|140416374|140306829|1379678559|252231851|133709640|252231852|133709626|252231853|133709627|252231854|133709628|252231855|133709629|252231856|133709630|252231857|133709631|252231858|133709632|252231859|133709633|252231860|140035956|252231861|133709638|252231862|133709639|252231863|133709641|1333678604|147019259|147019260|147300474|147019261|147019262|147359569|147359570|147300475|147359571|147019263|147019264|147300476|147019265|147019266|147019267|147300477|147019268|147019269|147019270|147300478|147019271|147019272|147019273|147019274|147019275|147300479|147019276|147019277|147019278|147300480|147019279|147019280|147019281|147300481|147019282|147019283|147019284|147300482|147019285|147019286|147019287|147019288|147300483|147019289|147019290|147019291|147300484|147019292|147019293|147019294|147300485|147019295|147019296|147019297|147300486|147905747|147905748|147905749|147905750|147905751|147905752|147905753|147905754|147905755|147905756|147905757|147905758|147905759|147905760|147905761|147905762|147905763|147905764|147905765|147905766|147087746|147019305|147019306|147300489|147019307|147019308|147019309|147300490|147905768|147905769|147905770|147905771|147905772|147019314|147019315|147300492|147019316|147019317|147019318|147300493|147019319|147019320|147019321|147300494|147019322|147019323|147019324|147300495|147019325|147019326|147019327|147300496|147019328|147019329|147019330|147019331|147300497|147019332|147019333|147019334|147300498|147019335|147019336|147019337|147300499|147019338|147019339|147019340|147300500|147019341|147019342|147019343|147300501|147019344|147019345|147019346|147300502|147019347|147019348|147019349|147300503|147019350|147019351|147019352|147300504|147019353|147019354|231020327|1356888557|252605504|144643874|252605505|144643875|252605506|144643876|252605507|144643877|252605508|144643878|252605509|144643879|252605510|144643880|252605511|144643881|252605512|144643882|252605513|144643883|252605514|144643884|1330628575|230229083|230229084|230229085|230229086|230229087|230229088|230229089|230229090|230229091|230229092|230229093|230229094|230229095|230229096|230229097|230229098|230229099|230229100|230229101|230229102|230229103|230229104|230229105|230229106|230229107|230229108|230229109|230229110|230229111|230229112|230229113|230229114|230229115|230229116|230229117|230229118|230229119|230229120|230229121|230229122|230229123|230229124|230229125|230229126|230229127|230229128|230229129|230229130|230229131|230229132|230229133|230229134|230229135|230229136|230229137|230229138|234899649|234899650|234899651|230229139|230229140|230229141|230229142|230229143|230229144|230229145|230229146|230229147|230229148|230229149|230229150|230229151|230229152|230229153|230229154|230229155|230229156|230229157|230229158|230229159|230229160|230229161|230229162|230229163|230229164|230229165|230229166|230229167|230229168|230229169|230229170|230229171|1905528537|252605515|144643887|252605516|144643885|252605517|144643886|252605518|144643888|252605519|144643889|252605520|144643890|252605521|144643891|252605522|144643892|252605523|144643893|252605524|144643894|252605525|144643895|252605526|144643896|252605527|144643898|1330208559|154863474|154863475|154863476|154863477|154863478|154863479|154863480|154863481|154863482|154863483|154863484|154863485|154863486|154863487|154863488|154863489|154863490|154863491|154863492|154863493|154863494|154863495|154863496|154863497|154863498|154863499|154863500|154863501|154863502|154863503|154863504|154863505|154863506|154863507|154863508|154863509|154863510|154863511|154863512|154863513|154863514|154863515|154863516|154863517|154863518|154863519|154863520|154863521|154863522|154863523|154863524|154863525|154863526|154863527|154863528|154863529|154863530|154863531|154863532|154863533|154863534|154863535|154863536|154863537|154863538|154863539|154863540|154863541|154863542|154863543|154863544|154863545|154863546|154863547|154863548|162267202|154863550|154863551|154863552|154863553|154863554|154863555|154863556|154863557|154863558|154863559|154863560|154863561|154863562|154863563|154863564|154863565|154863566|154863567|154863568|154863569|232921070|1381238572|252916487|153974156|252916488|153974157|252916489|153974158|252916490|153974160|252916491|153974161|252916492|153974162|252916493|153974163|252916494|153974164|252916495|153974165|252916496|153974166|252916497|153974167|252916498|153974168|252916499|153974169|252916500|153974170|252916501|153974171|252916502|153974172|252916503|153939567|252916504|153974173|252916505|153974174|252916506|153974175|252916507|153974176|252916508|153974177|1306898579|161175790|161175791|161175792|161175793|161175794|161175795|161175796|161175797|161175798|161175799|161175800|161175801|161175802|161175803|161175804|161175805|161175806|161175807|161175808|161175809|161175810|161175811|161175812|161175813|161175814|161175815|161175816|161175817|161175818|161175819|161175820|161175821|161175822|161175823|161175824|161175825|161175826|161175827|161175828|161175829|161175830|161175831|161175832|161175833|161175834|161175835|161175836|161175837|161175838|161175839|161175840|161175841|161175842|161175843|161175844|161175845|161175846|161175847|161175848|161175849|161175850|161175851|161175852|161175853|161175854|161175855|161175856|161175857|161175858|161175859|161175860|161175861|161175862|161175863|161175864|161175865|161175866|161175867|161175868|161175869|161175870|161175871|161175872|161175873|161175874|161175875|161175876|161175877|161175878|161175879|161175880|161175881|161175882|161175883|161175884|161175885|161175886|235494061|161175888|161175889|1348418581|159846714|159846715|159846716|159846717|159846718|159846719|159846720|159846721|159846722|159846723|159846724|159846725|159846726|159846727|159846728|159846729|159846730|159846731|159846732|159846733|159846734|159846735|159846736|159846737|159846738|159846739|159846740|159846741|159846742|159846743|159846746|159846747|159846748|159846749|159846750|159846751|159846752|159846753|159846758|159846759|159846760|159846761|159846762|159846763|159846766|159846767|159846768|159846769|159846770|159846771|1308988538|162460107|162460108|162460109|162460110|162460111|162460112|162460113|162460114|162460115|162460116|162460117|162460118|162460119|162460120|162460121|162460122|162460123|162460124|162460125|162460126|162460127|162460128|162460129|162460130|162460131|162460132|162460133|162460134|162460135|162460136|162460137|162460138|162460139|162460140|162460141|162460142|162460143|162460144|162460145|162460146|162460147|162460148|162460149|162460150|162460151|162460152|162460153|162460154|162460155|162460156|162460157|162460158|162460159|162460160|162460161|162460162|162460163|162460164|162460165|162460166|162460167|162460168|162460169|162460170|162460171|162460172|162460173|162460174|162460175|162460176|162460177|162460178|162460179|162460180|162460181|162460182|162460183|162460184|162460185|162460186|162460187|162460188|162460189|162460190|162460191|162460192|162460193|162460194|162460195|162460196|162460197|162460198|162460199|162460200|162460201|162460202|162460203|162460204|162460205|162460206|162460207|162460208|162460209|162460210|162460211|162460212|162460213|162460214|162460215|162460216|162460217|162460218|162460219|162460220|1387898579|166377488|166377489|166377490|166377491|166377492|166377493|166377494|166377495|166377496|166377497|166377498|166377499|166377500|166377501|166377502|166377503|166377504|166377505|166377506|166377507|166377508|166377509|166377510|166377511|166377512|166377513|166377536|166377537|166377516|166377517|166377518|166377519|166377520|166377521|166377522|166377523|166377524|166377525|166377526|166377527|166377528|166377529|166377530|166377531|166377532|166377533|166377534|166377535|165454752|165454753|165454754|165454755|1345848540|171582712|171582713|171582714|171582715|171582716|171582717|171582718|171582719|171582720|171582721|171582722|171582723|171582724|171582725|171582726|171582727|171582728|171582729|171582730|171582731|171582732|171582733|171582734|171582735|171582736|171582737|171582738|171582739|171582740|171582741|171582742|171582743|171582744|171582745|171582746|171582747|171582748|171582749|171582750|171582751|171582752|171582753|171582754|171582755|171582756|171582757|171582758|171582759|171582760|171582761|171582762|171582763|171582764|171582765|171582766|171582767|171582768|171582769|171582770|171582771|171582772|171582773|171582774|171582775|171582776|171582777|171582778|171582779|171582780|171582781|171582782|171582783|1385778573|175107810|175107811|175107812|175107813|175107814|175107815|175107820|175107821|175107822|175107823|175107824|175107825|175107826|175107827|175107828|175107829|175107830|175107831|175107832|175107833|175107834|175107835|175107836|175107837|175107838|175107839|175107842|175107843|175107844|175107845|175107846|175107847|175107848|175107849|175107850|175107851|175107852|175107853|175107854|175107855|175107840|175107841|1309228537|182213874|182213875|182213876|182213877|182213878|182213879|182213880|182213881|182213882|182213883|182213884|182213885|182213886|182213887|182213888|182213889|182213890|182213891|182213892|182213893|182213894|182213895|182213896|182213897|182213898|182213899|182213900|182213901|182213902|182213903|182213904|182213905|182213906|182213907|182213908|182213909|182213910|182213911|182213912|182213913|182213914|182213915|182213916|182213917|182213918|182213919|182213920|182213921|182213922|182213923|182213924|182213925|182213926|182213927|182213928|182213929|182213930|182213931|182213932|182213933|182213934|182213935|182213936|182213937|182213938|182213939|182213940|182213941|182213942|182213943|182213944|182213945|182213946|182213947|182213948|182213949|182213950|182213951|182213952|182213953|182213954|182213955|182213956|182213957|182213958|182213959|182213960|182213961|182213962|182213963|1378368619|182707996|182707997|182707994|182707995|182707998|182707999|182708000|182708001|182708002|182708003|182708004|182708005|182708006|182708007|182708008|182708009|182708010|182708011|182708012|182708013|182708016|182708017|182708018|182708019|182708020|182708021|182708022|182708023|182708024|182708025|182708026|182708027|182708028|182708029|182708030|182708031|182708032|182708033|182708034|182708035|1331738563|189540002|189540003|189540004|189540005|189540006|189540007|189540008|189540009|189540010|189540011|189540012|189540013|189540014|189540015|189540016|189540017|189540018|189540019|189540020|189540021|189540022|189540023|189540024|189540025|189540026|189540027|189540028|189540029|189540030|189540031|189540032|189540033|189540034|189540035|189540036|189540037|189540038|189540039|189540040|189540041|189540042|189540043|189540044|189540045|189540046|189540047|189540048|189540049|189540050|189540051|189540052|189540053|189540054|189540055|189540056|189540057|189540058|189540059|189540060|189540061|189540062|189540063|189540064|189540065|189540066|189540067|189540068|189540069|189540070|189540071|189540072|189540073|189540074|189540075|189540076|189540077|189540078|189540079|189540080|189540081|189540082|189540083|189540084|189540085|189540086|189540087|189540088|189540089|189540090|189540091|189540092|189540093|189540094|189540095|189540096|189540097|189540098|189540099|189540100|189540101|189540102|189540103|1962808558|1396758536|187053448|187053449|187053450|187053451|187053452|187053453|187053454|187053455|187053456|187053457|187053458|187053459|187053460|187053461|187053462|187053463|187053464|187053465|187053466|187053467|187053468|187053469|187053470|187053471|187053472|187053473|187053474|187053475|187053476|187053477|187053478|187053479|187053480|187053481|187053482|187053483|187053484|187053485|187053486|187053487|187053488|187053489|187053490|187053491|187053492|187053493|187053494|187053495|1329598570|1771738580|1767128570|1761338873|1833828561|1726918947|1857898551|116708348|116474982/i
  UD827 = /1293178557|1961048569|209432620|209432621|209432622|209432623|59596168|56181642|59393645|56359560|56181643|4665628879|56181644|56181645|56015962|56181646|59393646|56181647|56181648|56015963|56181649|59393647|56181650|56015964|56181651|59393648|56430411|56181653|56015965|56181654|59393649|56181655|56460483|56181656|59393650|56181657|56533420|56181658|59393651|56181659|56533421|56181660|59393652|56181661|56240816|56181662|59393653|56181663|56460484|56181664|59393654|56181665|60358936|210129179|210129180|210129181|210129182|56460486|56181672|59393658|56181673|56181674|60870161|56460487|56181675|59393659|56181676|209236000|56460488|56181679|59393661|56181680|56460489|56181681|59393662|56181682|56240819|56181683|59393663|56181684|56015967|56181685|59393664|56181686|56460490|56181687|59393665|56181688|56240820|56181689|59393666|56181690|56181691|56015966|56181692|59393667|56181693|56240821|56181694|59393668|56181695|56015968|60381731|59393669|56181697|1926308665|1460338540|4399128556|251436715|56631171|251436716|56631172|251436717|56631173|251436720|56631176|251436721|56631177|251436723|56631179|251436724|56631180|251436726|56631182|251436727|56631183|251436728|56631184|251436730|56631186|251436731|56631187|251436732|56631188|251436735|56631191|251436736|56631192|251436737|56631193|59539488|59458395|56480595|251436743|56480602|251436744|56480604|59539491|59458398|56480605|251436745|64863001|4386318649|251436718|56631174|251436719|56631175|251436722|56631178|251436725|56631181|251436729|56631185|251436733|56631189|251436734|56631190|59404928|59458393|56480593|59404929|59458394|59595435|59539489|59640385|56480596|251436738|56480597|251436739|56480598|251436740|56480599|251436741|56480600|251436742|56480601|59539490|59458397|56480603|202900215|202900216|59690106|59539493|56480607|251436746|56480608|251436747|56480609|251436748|56480610|251436749|56480611|251436750|56480612|251436751|56480613|251436752|56480615|251436753|56480616|202721917|202721918|202721919|202721920|202721921|202721922|1480558581|59610756|233118803|59811418|59645451|59610757|63643072|63074664|63643073|60524621|63643074|60524620|59645455|59610759|59645456|59811421|59645457|59610760|59645458|59811422|59645459|59610761|59645460|59811423|59645461|59610762|59645462|59811424|59645463|59610763|59645464|59811425|59645465|59706476|59645466|59811426|59645467|59706477|59645468|59811427|63643075|59706478|59645470|59811428|59645471|59304850|59645472|59811429|63643076|63643077|63482402|63643078|63074665|63643079|63643080|63482401|63643081|63074666|63643082|63482404|63643083|63074667|63643084|63482403|63643085|63074668|63643086|63409497|63643087|63074669|63643088|63482400|63643089|63074670|63643090|63409498|63643091|63074671|63643092|63482395|63643094|63074672|63643095|63482396|63643096|63074673|63643097|63482397|63643098|63074674|63643099|63643100|63482398|63643101|63074675|63643102|63482399|63643103|63074676|63643104|1481688575|59453774|59492686|67411904|59453775|252742485|56648262|252742486|56648263|252742487|56648264|252742488|56648265|252742489|56648266|252742501|62143594|252742504|62143598|252742505|62143599|252742506|62143600|252742507|62143601|252742508|62143602|252742510|62143604|252742511|62143605|252742512|62143606|252742513|62143607|252742514|62143608|252742515|62143609|252742516|62143610|252742517|62143611|4389869155|252742490|59492688|56648267|252742491|56648268|252742492|56648269|252742493|56648270|252742494|56648271|252742495|62143587|252742496|62143588|252742497|62143589|252742498|62143591|252742499|62143592|252742500|62143593|252742502|62143595|252742503|62143596|252742509|62143603|116708348|116474982|1489118552|77367476|77345002|77345001|77345003|77345004|77367477|77345006|77345005|77345007|77367478|77345009|77345008|77345010|77367479|77345012|77345011|77345013|77367480|77345015|77345014|77345016|77367481|77345018|77345017|77345019|77367482|77345021|77345020|77345022|77367483|77345024|77345023|77345025|77314346|77345027|77345026|77345028|77314347|77345030|77345029|77345031|77314345|77345033|77345032|77345034|77314348|77345036|77345035|77345037|77345038|77314344|77345040|77345039|77345041|77314343|77345043|77345042|77345044|77314342|77345046|77345045|77345047|77345048|77314341|77345050|77345049|77345051|77314334|77345053|77345052|77345054|77314335|81421648|81190229|81421649|77314336|77345059|77345058|77345060|77345061|77314337|77345063|77345062|77345064|77314338|77345066|77345065|77345067|77345068|77314339|77345070|77345069|77345071|96513694|96365069|96365068|96365071|96513695|96365073|96365072|96365075|77314340|77345073|77345072|77345074|77345075|1463508613|251759843|76945246|251759844|76945247|251759845|76945248|251759846|66418625|251759847|66418624|251759848|66418614|251759849|66418615|251759850|66418616|251759851|66418617|251759852|66418618|251759862|66418621|251759863|66418622|251759864|66418623|4393919304|251759853|66418605|251759854|66418606|251759855|66418607|251759856|66418608|251759857|66418609|251759858|66418610|251759859|66418613|251759860|66418611|251759861|66418612|251759865|66418626|207968044|207968045|1471748603|83877448|83664002|83664001|83664003|83877447|83664005|83664004|83877446|84434897|83664006|83664008|83877445|84434898|83664009|83664011|83877444|83664013|83664012|83664014|83877443|83664016|83664015|83664017|84434899|83877442|83664020|83664019|83664021|83877441|83664023|83664022|83664024|83877440|83664026|83664025|83664027|83417920|83664029|83664028|83664030|83417919|84434900|83664031|83664033|83417918|83664035|83664034|84434901|83417917|83664038|83664037|83664039|83664040|83417916|83664042|83664041|83664043|83417915|83664045|83664044|83664046|83417914|84978130|83664047|83664049|83417913|84978131|83664050|84978132|83417912|84978133|83664053|83664055|83417911|83664057|83664056|83664058|83510673|84978134|83664059|83664061|83510674|83664063|83664062|83664064|83510675|83664066|83664065|83664067|83510676|83664069|83664068|83664070|83510677|83664072|83664071|83664073|83934433|83664075|83664074|83664076|83934432|84923319|83664077|84923320|83934431|83664081|83664080|83664082|83664083|83934424|83664085|83664084|84923321|83934425|83664088|83664087|83664089|83934426|84923322|83664090|83664092|83934427|83664094|83664093|83664095|83664096|83934428|83664098|83664097|83664099|83934429|84715735|83664100|83664102|83934430|83664104|83664103|83664105|230860126|84923323|1468958602|252667420|76998322|252667421|76998323|252667422|76998324|252667423|76998325|252667424|76998326|252667425|76998327|252667426|76998328|252667427|76998329|252667428|76998330|252667429|76998331|252667430|76998332|252667431|76998333|252667432|76998334|252667433|76998335|1493378536|92197576|92314567|92993672|92314568|92314569|92197578|92314570|92993673|92314571|92197579|92314572|92993674|92314573|92197580|92314574|92993675|92314575|92197581|92314576|92993676|92314577|92197582|92314578|92993677|92314579|92314580|92197583|92314581|92993678|92314582|92314583|92314584|102445154|92197584|92314585|92993679|92314586|92197585|92314587|92993680|92314588|92197586|92314589|92993681|92314590|92197587|92314591|92993682|95692844|92314592|92197588|92314593|92993683|92314594|92197589|92314595|92993684|92314596|92197590|92314597|92993685|92314598|92314599|92197591|92314600|92993686|92314601|92197592|92314602|92993687|92314603|92197593|92314604|92993688|92314605|1474228538|251535175|81459574|251535176|81459575|251535177|81459576|251535178|81459577|251535179|81459578|251535180|81459579|251535184|102415388|251535185|102415389|251535186|102415390|251535187|102415391|251535189|102415393|251535190|102415394|251535191|102415395|251535193|102415397|4454018823|251535181|81459580|251535182|81459581|251535183|81459582|251535188|102415392|251535192|102415396|251535194|102415398|251535195|102415399|251535196|102415400|251535197|102415401|1478678538|102088771|103339228|102088773|102088772|102088774|102088775|103339229|102088777|102088776|102088778|103339230|102088780|102088779|102088781|103339231|102088783|102088782|102088784|103339232|102088786|102088785|102088787|103339233|102088789|102088788|102088790|102833898|102088792|102088791|102088793|102833897|102088795|102088794|102088796|102088797|102833896|102088799|102088798|102088800|102088801|102833895|102088803|102088802|102088804|102833894|102088806|102088805|102088807|102833893|102088809|102088808|102088810|102833892|102088812|102088811|102088813|102833889|102088815|102088814|102088816|102833890|102088818|102088817|102088819|102833891|102088821|102088820|102088822|102088823|1482978569|252303660|86243910|252303661|86243911|252303662|86243912|252303663|86243913|252303664|86243915|252303665|86243914|252303666|102349448|252303667|102349449|252303668|102349450|252303669|102349451|252303670|102349452|252303671|102349453|252303672|102349454|252303673|102349455|252303674|102349457|252303675|102349456|1455178654|117708697|117640004|117640003|117640005|117708698|117640007|117640006|117708699|117640009|117640008|117640010|117708700|117640012|117640011|117640013|117708701|117640015|117640014|117640016|117708702|117640018|117640017|117640019|117708703|117640021|117640020|117640022|117708704|117838486|117640023|117838487|117708705|117640027|117640026|117640028|117708706|117640030|117640029|117640031|117708707|117640033|117640032|117640034|117708708|117640036|117640035|117640037|117708709|117640039|117640038|117640040|117640041|117708710|117640043|117640042|117640044|117708711|117640046|117640045|117640047|117708712|117640049|117640048|117640050|117708713|117640052|117640051|117640053|117708714|117640055|117640054|117640056|117708715|117640058|117640057|117640059|117708716|117640061|117640060|117640062|117640063|121221362|121262385|121221363|120976996|121221364|117640064|117943390|117708717|117640066|117640065|117640067|117708718|117640069|117640068|117640070|117708719|117640072|117640071|117640073|117708720|117640075|117640074|117640076|117943391|117708721|117640078|117640077|117640079|117708722|117640081|117640080|117640082|117708723|117640084|117640083|117640085|117708724|117640087|117640086|117640088|117708725|117640090|117640089|117640091|117708726|117640093|117640092|117640094|117708727|117640096|117640095|117640097|1924328923|1452318628|251824757|116446967|251824758|116446968|251824759|116446969|251824760|116446970|251824761|116446971|251824762|116446972|251824763|116446973|251824764|116446974|251824765|116446975|251824766|116446976|251824767|116446977|251824768|116446978|251824769|116446979|251824770|116446980|251824771|116446981|251824772|116446982|251824773|116446983|251824774|116446984|251824775|116446985|251824776|116446986|251824777|116446987|251824778|116446988|1918668888|1931128728/i

  def tags_to_category_id(tags)
    case tags
    when /ud257/ then 528 # A/B Testing
    when /ud855/ then 749 # Advanced Android App Dev
    when /ud189/ then 549 # Advanced Operating Systems
    when /ud875C/ then 1026 # Android Auto Development
    when /ud862/ then 1029 # Android Design for Developers
    when /ud837/ then 701 # Android For Beginners
    when /ud825/ then 516 # Android Performance
    when /ud875B/ then 1027 # Android TV & Google Cast Development
    when /ud875A/ then 1028 # Android Wear Development
    when /ud518/ then 1005 # App Monetization
    when /cs387/ then 564 # Applied Cryptography
    when /cs373/ then 556 # Artificial Intelligence for Robotics
    when /ud330/ then 519 # Authentication & Authorization: OAuth
    when /ud860/ then 522 # Browser Rendering Optimization
    when /ma008/ then 567 # College Algebra
    when /ud(061|557)/ then 550 # Computability, Complexity & Algorithms
    when /ud(436|819)/ then 554 # Computer Networking
    when /ud299/ then 1022 # Configuring Linux Web Servers
    when /ud651/ then 542 # Data Analysis with R
    when /ud507/ then 529 # Data Visualization and D3.js
    when /ud032/ then 559 # Data Wrangling with MongoDB
    when /cs212/ then 573 # Design of Computer Programs
    when /ud853/ then 515 # Developing Android Apps
    when /ud858/ then 523 # Developing Scalable Apps in Python
    when /ud859/ then 545 # Developing Scalable Apps with Java
    when /cs222/ then 574 # Differential Equations in Action
    when /ud088/ then 518 # Full Stack Foundations
    when /cs348/ then 577 # Functional Hardware Verification
    when /ud876-3/ then 763 # GPS: AdMob
    when /ud876-2/ then 762 # GPS: Analytics
    when /ud876-5/ then 765 # GPS: Identity
    when /ud876-1/ then 761 # GPS: Location & Context
    when /ud876-4/ then 764 # GPS: Maps
    when /ud867/ then 750 # Gradle for Android
    when /ud292/ then 536 # HTML5 Canvas
    when /cs255/ then 563 # HTML5 Game Development
    when /ud809/ then 553 # Health Informatics in the Cloud
    when /ud(007|233)/ then 552 # High Performance Computer Architecture
    when /ud607/ then 590 # How To Make an iOS App
    when /ep245/ then 541 # How to Build a Startup
    when /ud775/ then 511 # How to Use Git and GitHub
    when /cs291/ then 571 # Interactive 3D Graphics
    when /ma004/ then 566 # Intro Algebra Review
    when /ud110/ then 538 # Intro to AJAX
    when /cs215/ then 570 # Intro to Algorithms
    when /cs271/ then 540 # Intro to Artificial Intelligence
    when /cs101/ then 509 # Intro to Computer Science
    when /ud359/ then 533 # Intro to Data Science
    when /ud827/ then 547 # Intro to Descriptive Statistics
    when /ud611/ then 1039 # Intro to Devops
    when /ud304/ then 508 # Intro to HTML and CSS
    when /ud617/ then 531 # Intro to Hadoop and MapReduce
    when /ud201/ then 548 # Intro to Inferential Statistics
    when /cs046/ then 512 # Intro to Java Programming
    when /ud120/ then 530 # Intro to Machine Learning
    when /cs344/ then 546 # Intro to Parallel Programming
    when /ph100/ then 578 # Intro to Physics
    when /ud162/ then 544 # Intro to Point & Click App Development
    when /ps001/ then 580 # Intro to Psychology
    when /ud197/ then 517 # Intro to Relational Databases
    when /st101/ then 565 # Intro to Statistics
    when /cs313/ then 576 # Intro to Theoretical Computer Science
    when /ud585/ then 514 # Intro to iOS App Development with Swift
    when /ud245/ then 537 # Intro to jQuery
    when /design101/ then 561 # Intro to the Design of Everyday Things
    when /ud804/ then 510 # JavaScript Basics
    when /ud989/ then 524 # JavaScript Design Patterns
    when /ud549/ then 539 # JavaScript Testing
    when /ud409/ then 551 # Knowledge-Based AI: Cognitive Systems
    when /ud902/ then 931 # Learn Swift Programming Syntax
    when /ud595/ then 1021 # Linux Command Line Basics
    when /ud(262|675|741|820)/ then 581 # Machine Learning
    when /ud248/ then 558 # Make Your Own 2048
    when /cs256/ then 562 # Mobile Web Development
    when /ud919/ then 560 # Model Building and Validation
    when /ud015/ then 535 # Object-Oriented JavaScript
    when /ud509/ then 757 # Product Design
    when /ud036/ then 513 # Programming Foundations with Python
    when /cs262/ then 572 # Programming Languages
    when /ud381/ then 532 # Real-Time Analytics with Apache Storm
    when /ud882/ then 521 # Responsive Images
    when /ud893/ then 520 # Responsive Web Design Fundamentals
    when /cs259/ then 575 # Software Debugging
    when /ud(805|957|904)/ then 555 # Software Development Process
    when /cs258/ then 569 # Software Testing
    when /bio110/ then 579 # Tales from the Genome
    when /ud788/ then 525 # UIKit Fundamentals
    when /ud849/ then 543 # UX Design for Mobile Developers
    when /ma006/ then 568 # Visualizing Algebra
    when /cs253/ then 534 # Web Development
    when /ud884/ then 557 # Website Performance Optimization
    when /ud774/ then 767 # Xcode Debugging
    when /ud421/ then 526 # iOS Networking with Swift
    when /ud325/ then 527 # iOS Persistence and Core Data
    when UD201 then 548 # Intro to Inferential Statistics
    when UD827 then 547 # Intro to Descriptive Statistics
    end
  end

  def initialize
    super
    @client = PG.connect(dbname: DB_NAME)
  end

  def execute
    initialize_ip_addresses

    train_spam_classifier

    import_users
    # import_categories
    import_topics
    import_posts
  end

  def initialize_ip_addresses
    puts "", "Initializing IP addresses..."

    @client.exec("DROP TABLE IF EXISTS ip_addresses")
    @client.exec("CREATE TABLE ip_addresses (user_id INT PRIMARY KEY, ip VARCHAR(39), registration_ip VARCHAR(39))")

    @client.exec(<<-SQL
      INSERT INTO ip_addresses (user_id, ip, registration_ip)
      SELECT au.id
           , (SELECT ip FROM forum_action fa WHERE fa.user_id = au.id AND LENGTH(COALESCE(ip, '')) > 0 AND action_type IN ('userjoins', 'userlogin') ORDER BY fa.id DESC LIMIT 1)
           , (SELECT ip FROM forum_action fa WHERE fa.user_id = au.id AND LENGTH(COALESCE(ip, '')) > 0 AND action_type IN ('userjoins', 'userlogin') ORDER BY fa.id ASC  LIMIT 1)
      FROM auth_user au
      ORDER BY au.id
    SQL
    )
  end

  def train_spam_classifier
    puts "", "Training SPAM classifier..."

    @client.exec(<<-SQL
        SELECT username, email, ip, title, body
          FROM forum_node fm
          JOIN auth_user au ON au.id = fm.author_id
     LEFT JOIN ip_addresses ia ON ia.user_id = fm.author_id
         WHERE is_staff
            OR is_superuser
            OR author_id IN (SELECT id FROM auth_user WHERE email ILIKE '%@udacity.com')
            OR author_id IN (#{HAM_USER_IDS.join(",")})
    SQL
    ).each { |d| train(:ham, d.values.join("\n")) }

    @client.exec(<<-SQL
        SELECT username, email, ip, title, body
          FROM forum_node fm
          JOIN auth_user au ON au.id = fm.author_id
     LEFT JOIN ip_addresses ia ON ia.user_id = fm.author_id
         WHERE author_id IN (#{SPAM_USER_IDS.join(",")})
    SQL
    ).each { |d| train(:spam, d.values.join("\n")) }

    puts "Summarizing SPAM classifier..."
    summarize!
  end

  def import_users
    puts "", "Importing users..."

    total = @client.exec(<<-SQL
      SELECT COUNT(id)
        FROM auth_user
    SQL
    )[0]["count"]

    @last_user_id = -1

    batches do |limit, offset|
      users = @client.exec(<<-SQL
        SELECT au.id, username, replace(email, '''', '') AS email, is_staff, is_superuser, last_login, date_joined, real_name, website, location, date_of_birth, about, ip, registration_ip
          FROM auth_user au
     LEFT JOIN forum_user fu ON fu.user_ptr_id = au.id
     LEFT JOIN ip_addresses ia ON ia.user_id = au.id
         WHERE au.id > #{@last_user_id}
      ORDER BY au.id ASC
         LIMIT #{limit}
      SQL
      ).to_a

      break if users.size < 1
      @last_user_id = users[-1]["id"]

      create_users(users, total, offset) do |user|
        {
          id: user["id"],
          username: user["username"].presence,
          email: user["email"].presence,
          moderator: user["is_staff"] == "t",
          admin: user["is_superuser"] == "t",
          last_seen_at: user["last_login"],
          created_at: user["date_joined"],
          name: user["real_name"].presence,
          website: user["website"].presence,
          location: user["location"].presence,
          date_of_birth: user["date_of_birth"].presence,
          bio_raw: user["about"].presence,
          ip_address: user["ip"].presence,
          registration_ip_address: user["registration_ip"].presence,
        }
      end
    end
  end

  def import_categories
    raise NotImplementedError
  end

  def import_topics
    puts "", "Importing topics..."

    total = @client.exec(<<-SQL
      SELECT COUNT(id)
        FROM forum_node
       WHERE node_type = 'question'
    SQL
    )[0]["count"]

    @last_topic_id = -1

    batches do |limit, offset|
      topics = @client.exec(<<-SQL
        SELECT fn.id, author_id, added_at, last_activity_at, title, body, extra_count, tagnames, state_string, last_activity_by_id, ip
          FROM forum_node fn
     LEFT JOIN forum_action fa ON fa.node_id = fn.id AND fa.user_id = fn.author_id AND fa.action_type = 'ask'
         WHERE fn.node_type = 'question'
           AND fn.id > #{@last_topic_id}
      ORDER BY fn.id ASC
         LIMIT #{limit}
      SQL
      ).to_a

      break if topics.size < 1
      @last_topic_id = topics[-1]["id"]

      create_topics(topics, total, offset) do |topic|
        deleted = topic["state_string"] =~ /deleted/i
        updated_at = topic["last_activity_at"].presence || topic["added_at"]
        {
          id: topic["id"],
          user_id: topic["author_id"],
          new_category_id: tags_to_category_id(topic["tagnames"]),
          created_at: topic["added_at"],
          updated_at: updated_at,
          title: topic["title"].presence,
          raw: topic["body"].presence,
          views: topic["extra_count"].presence,
          deleted_at: deleted ? updated_at : nil,
          deleted_by_id: deleted ? topic["last_activity_by_id"] : nil,
          closed: !!(topic["state_string"] =~ /closed/i),
          wiki: !!(topic["state_string"] =~ /wiki/i),
          ip: topic["ip"].presence,
        }
      end
    end
  end

  def import_posts
    puts "", "Importing posts..."

    total = @client.exec(<<-SQL
      SELECT COUNT(id)
        FROM forum_node
       WHERE node_type <> 'question'
    SQL
    )[0]["count"]

    @last_post_id = -1

    batches do |limit, offset|
      posts = @client.exec(<<-SQL
        SELECT fn.id, abs_parent_id, author_id, added_at, last_activity_at, body, state_string, last_activity_by_id, ip, CASE WHEN parent_id <> abs_parent_id THEN parent_id ELSE NULL END AS reply_id
          FROM forum_node fn
     LEFT JOIN forum_action fa ON fa.node_id = fn.id
                              AND fa.user_id = fn.author_id
                              AND fa.action_type IN ('answer', 'comment')
         WHERE fn.node_type <> 'question'
           AND fn.id > #{@last_post_id}
      ORDER BY fn.id ASC
         LIMIT #{limit}
      SQL
      ).to_a

      break if posts.size < 1
      @last_post_id = posts[-1]["id"]

      create_posts(posts, total, offset) do |post|
        deleted = post["state_string"] =~ /deleted/i
        updated_at = post["last_activity_at"].presence || post["added_at"]
        {
          id: post["id"],
          topic_id: post["abs_parent_id"],
          user_id: post["author_id"],
          created_at: post["added_at"],
          updated_at: updated_at,
          raw: post["body"].presence,
          wiki: !!(post["state_string"] =~ /wiki/i),
          deleted_at: deleted ? updated_at : nil,
          deleted_by_id: deleted ? post["last_activity_by_id"] : nil,
          ip: post["ip"].presence,
          reply_to_post_id: post["reply_id"].presence,
        }
      end
    end
  end

end

Imports::OSQA.new.perform
